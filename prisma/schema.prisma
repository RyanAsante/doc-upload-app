generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  password String
  role     UserRole  @default(CUSTOMER)
  status   UserStatus @default(PENDING) // ðŸ‘ˆ Pending, Approved, Rejected
  uploads  Upload[]  // ðŸ‘ˆ Relation back to Upload
  activityLogs ActivityLog[] // ðŸ‘ˆ Relation to activity logs
  createdAt DateTime @default(now())
  approvedAt DateTime?
  approvedBy String?
}

model ActivityLog {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  action    String   // ðŸ‘ˆ "UPLOAD", "DELETE", "APPROVE", "REJECT"
  details   String   // ðŸ‘ˆ Description of the action
  createdAt DateTime @default(now())
}

model Upload {
  id        String   @id @default(uuid())
  title     String?  // ðŸ‘ˆ Optional title for files
  name      String
  imagePath String
  fileType  FileType @default(IMAGE) // ðŸ‘ˆ Image or Video
  userId    String?
  user      User?     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model ManagerApplication {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  status    String   @default("PENDING") // PENDING, APPROVED, REJECTED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  CUSTOMER
  MANAGER    // ðŸ‘ˆ New level below admin
  ADMIN
}

enum UserStatus {
  PENDING
  APPROVED
  REJECTED
}

enum FileType {
  IMAGE
  VIDEO
}
